**********************************************************************************
                                用 Emacs 编写 HTML
**********************************************************************************

Emacs 提供了一个简单的 HTML 模板，输入：

>> C-c C-t html 然后需要输入 title 内容回车，即可调入该模板。

上面讲解了怎么开始写 HTML，接下来是如果写好了怎么用浏览器查看：

>> C-c C-v 可以调出浏览器看看当前 HTML 代码的显示效果。若使用命令：M-x html-autoview-mode，可以实现在 Emacs 保存 HTML 文档之时自动打开浏览器查看文档显示效果。
 
*******************
HTML 里面光标移动
*******************
除了 Emacs 中的光标移动命令，在 HTML 主模式下还有

>> C-c C-f 光标移到其当前所在位置的下一个 HTML 标签位置
>> C-c C-b 光标移到其当前所在位置的上一个 HTML 标签位置 

*******************
隐藏/显示HTML标记
*******************
当你觉得正在编写的 HTML 文档中无处不在的 HTML 标记破坏了文档的美感，可以试试

>> C-c Tab 暂时将 HTML 标记隐藏起来，只显示你的文本内容。在 HTML 隐藏状态下继续编辑文档，Emacs会保护其隐藏的所有标记，所以你没有必要担心会不小心把它们给删掉了。而且当你的光标移动到一个被隐藏的标记位置上时，Emacs 会在 Mini-buffer 中显示该标记名。若要显示只需在再次使用命令：C-c Tab，即可将所有被隐藏的 HTML 标记重新显示出来。

*******************
HTML 模式其它一些常用的键绑定
*******************
>> C-c 1～6  可以自动插入h1～h6的标题。譬如键入C-c 1，就会在当前位置自动插入h1标题。
>> C-c Enter 可以实现在光标位置插入段落标记。
>> C-c /     可以将标签封闭。对于其它未提供闭合功能的键绑定，都可以使用这种方法。
>> C-c C-c h 可以实现在光标位置插入超级连接标记。
>> C-c C-c u 可在光标位置处插入无序列表标记。
>> C-c C-c o 在光标当前位置插入有序列表标记。
>> C-c C-c l 在当前位置插入一个列表项。与
>> C-c C-c i 在光标位置插入图像引入标记。
>> C-c C-j   在光标位置处插入换行符。
>> C-c C-c - 在光标位置处插入水平线标记。

还有一个很有用的命令，如果想看看某个标记的解释，可以将光标移到该标记上，然后输入：

>> C-c ? 在Mini-buffer中显示解释。

若想知道更多一些的键绑定功能，可以 C-c C-h，看看说明。

*******************
HTML 模式中的特殊字符输入
*******************
在 HTML 中，已经被用作 HTML 标记的字符，如果要在 HTML 文本中将它们显示出来，直接键入是不行的。譬如我要在 HTML 页面中显示，浏览器会将它视为段落标记来处理。为了解决这个问题，我们可以 C-c C-n ，再键入 <；继续 C-c C-n ，再键入字母 p；最后再 C-c C-n >来看看实现了什么。通过这个小例子，应该知道C-c C-n的功用了吧。对于其它字符，只要键盘上有的，但 HTML语言已经征用了的，都可以使用这个键绑定来输入。

对于键盘上没有的字符，譬如拉丁文－1中的字符，该如何输入呢？Emacs 中的 HTML 主模式提供了许多语言辅模式。首先，使用 C-c 8 可以打开 SGML name entity 小模式（提示：再次键入 C-c 8 即可关闭该模式）。打开 SGML name entity 小模式后，键入 C-x <Return> k，选择语言模式，我们要使用拉丁文－1，那么就可以键入 latin-1，然后回车即可进入拉丁文－1字符插入模式。在向 HTML 文档中插入拉丁文-1字符时，使用 C-x 8 为前缀。譬如，我要在文档中插入"&yen;"，只需要键入 C-x 8 Y 即可。此时，在HTML源文件中，会显示：“&yen;”，而在 Mini-buffer 中会同时显示所插入的实际符号"¥"，此时只需执行一次 Undo 操作，即输入：C-x u 或 C-/，就可以将 Mini-buffer 中的实际符号送入到源文件中了。也许你输入时需要参考一些字符集表，比如 ISO latin-1 字符集等，都可以在网上轻松找到。